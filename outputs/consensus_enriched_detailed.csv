support_models,class_canon,method_canon,pair,RepresentativeClassRaw,RepresentativeMethodRaw,SelectedUC,UCSelectionMode,RawClassInventory,RawMethodInventory,ActionInventory,UCInstanceCounts,UCModelCounts
9,rolemanager,assignrole,"('rolemanager', 'assignrole')",RoleManager,assignRole,UC20,consensus,RoleManager (n=67),assignRole (n=67),"assign new role to user (n=4); change user role (n=2); assign role to user (n=2); assign role to user account (n=2); Assign new role to user (n=2); Assign new role to a user (n=1); assign role (n=1); update user role (n=1); assign or change user role (n=1); assign/update role (n=1); assign user role (n=1); assign or update user role (n=1); Assign role to user (n=1); assign new role to user account (n=1); Change user role (n=1); Enforce valid role transitions (n=1); Assigns a new role to the user after validation. (n=1); Validate and update user role (n=1); Assign a new role to a user, potentially creating associated entities like ServiceProvider. (n=1); Assign a new role to the user (n=1); Validate and change the role of a user. (n=1); Assigns new role to user (n=1)",UC20:55,UC20:9
9,usercredentials,resetpassword,"('usercredentials', 'resetpassword')",UserCredentials,resetPassword,UC03,consensus,UserCredentials (n=44),resetPassword (n=44),reset password (n=4); reset user password (n=3); update password (n=2); update password with new value (n=2); change password via valid token (n=1); Reset password using valid token (n=1); reset password & clear token (n=1); reset password with token (n=1); Reset password with new value (n=1); Update encrypted password (n=1); Update the user's password using the new encrypted value and clear the reset token details (n=1); Resets the password if the token is valid and not expired. (n=1); Update the encrypted password and clear the reset token. (n=1); Reset password using token (n=1),UC03:41,UC03:9
9,usercredentials,updatepassword,"('usercredentials', 'updatepassword')",UserCredentials,updatePassword,UC03,consensus,UserCredentials (n=30),updatePassword (n=30),Store new encrypted password (n=3); update password (n=2); update password after reset (n=1); update user password (n=1); update password with new value (n=1); Update encrypted password (n=1); Update the stored encrypted password and record the reset date (n=1); Update the password (n=1); Update stored password hash and clear reset token/attempts. (n=1); Update password after verification (n=1); Update user's password after verification (n=1); Updates password after reset (n=1); Update password hash (n=1),UC03:18,UC03:9
8,notificationservice,sendpasswordresetlink,"('notificationservice', 'sendpasswordresetlink')",NotificationService,sendPasswordResetLink,UC03,consensus,NotificationService (n=16),sendPasswordResetLink (n=16),password reset email (n=1); email reset link (n=1); send password reset email (n=1); Deliver password reset instructions (n=1); Send email containing the password reset link (n=1); Send a password reset link to the email (n=1); send password reset link (n=1); Send password reset instructions (n=1),UC03:12,UC03:8
8,notificationservice,sendverificationemail,"('notificationservice', 'sendverificationemail')",NotificationService,sendVerificationEmail,UC01,consensus,NotificationService (n=43),sendVerificationEmail (n=43),send email verification (n=5); Send email verification link (n=4); send verification email (n=4); email verification link (n=2); send verification (n=1); send email verification link (n=1); send account verification email (n=1); Send email verification (n=1); Trigger email confirmation message (n=1); Send email containing the verification link to the user's email address (n=1); Send email verification notification (n=1); Send a verification email to the user (n=1); Sends email verification link (n=1),UC01:30,UC01:8
8,servicerequest,cancel,"('servicerequest', 'cancel')",ServiceRequest,cancel,UC12,consensus,ServiceRequest (n=30),cancel (n=30),cancel request (n=5); cancel service request (n=4); Cancel the service request (n=2); Cancel service request (n=1); cancel pending request (n=1); Mark request as cancelled with timestamp (n=1); Set status to CANCELLED with initiator (n=1); Cancel request and update status (n=1); Cancels active request (n=1),UC12:25,UC12:8
8,useraccount,deactivateaccount,"('useraccount', 'deactivateaccount')",UserAccount,deactivateAccount,UC15,consensus,UserAccount (n=50),deactivateAccount (n=50),deactivate user account (n=2); Mark account as deactivated (n=2); Deactivate user account (n=2); Deactivate account with reason (n=1); soft-delete account (n=1); soft-deactivate user account (n=1); Change account status to DEACTIVATED upon user request (n=1); soft deactivate account (n=1); Deactivates the user account. (n=1); Set account status to DEACTIVATED and record reason. (n=1); deactivate account (n=1); Soft deactivation of user account (n=1),UC15:36; UC01:1,UC01:1; UC15:8
8,useraccount,lockaccount,"('useraccount', 'lockaccount')",UserAccount,lockAccount,UC02,consensus,UserAccount (n=38),lockAccount (n=38),lock account after failed login attempts (n=2); Set account status to LOCKED and record lock date. (n=2); lock account after failed attempts (n=2); Temporarily lock account after failed attempts (n=2); Lock account after multiple failed login attempts (n=1); lock after max failed attempts (n=1); lock account after multiple failed login attempts (n=1); Lock the account due to failed logins (sets status to LOCKED) (n=1); Change account status to LOCKED after multiple failed login attempts (n=1); Locks the user account due to excessive failed login attempts. (n=1); Temporarily locks account after failed attempts (n=1),UC02:31,UC02:8
8,usercredentials,generatepasswordresettoken,"('usercredentials', 'generatepasswordresettoken')",UserCredentials,generatePasswordResetToken,UC03,consensus,UserCredentials (n=36),generatePasswordResetToken (n=36),"generate password reset token (n=6); Generate password reset token (n=3); generate token for password reset (n=2); generate reset token (n=2); create reset token (n=1); create password-reset token (n=1); Create time-limited reset token (n=1); Generate a unique token for password reset and set its expiration (n=1); Generate a password reset token (n=1); Generate a password reset token, set expiration, and return token (n=1); Generate and store a password reset token with an expiration date. (n=1); Generate, store, and set expiration for a password reset token. (n=1); Create password reset token (n=1); Generates password reset token (n=1)",UC03:24,UC03:7
8,usercredentials,validatecredentials,"('usercredentials', 'validatecredentials')",UserCredentials,validateCredentials,UC02,consensus,UserCredentials (n=34),validateCredentials (n=34),validate login credentials (n=4); Validate login credentials (n=1); validate email and password (n=1); verify password matches (n=1); validate password format and requirements (n=1); validate credentials format (n=1); authenticate credentials (n=1); Compare input with stored credentials (n=1); Compare encrypted passwords (n=1); Authenticate user (n=1); Check email/password validity (n=1); Validates login credentials (n=1),UC02:23; UC01:2,UC01:1; UC02:8
8,userprofile,verifyemail,"('userprofile', 'verifyemail')",UserProfile,verifyEmail,UC01,consensus,UserProfile (n=39),verifyEmail (n=39),mark email as verified (n=9); Mark email as verified (n=5); verify email (n=2); confirm email verification (n=1); Mark the email as verified (sets status to VERIFIED) and record date (n=1); verify email address (n=1); Mark the email as verified (n=1); Mark email as verified. (n=1); Mark email as verified and set verification date. (n=1); Marks email as verified (n=1),UC01:30,UC01:8
7,product,publishlisting,"('product', 'publishlisting')",Product,publishListing,UC05,consensus,Product (n=34),publishListing (n=34),publish product listing (n=5); publish listing (n=3); change listing status to published (n=1); publish draft listing (n=1); change status to published (n=1); Make product visible (n=1); Change status to published (n=1); Change status to PUBLISHED after validation (n=1); Validate and publish product (n=1); Change listing status to PUBLISHED and set listed date (n=1); Change product listing status to PUBLISHED (from DRAFT or PENDING_APPROVAL) (n=1); Sets the product listing status to PUBLISHED. (n=1); Set the listing status to PUBLISHED and record listed date. (n=1); Set listing status to PUBLISHED and record listed date. (n=1); Publish product listing (n=1),UC05:26,UC05:6
7,rolemanager,validateroletransition,"('rolemanager', 'validateroletransition')",RoleManager,validateRoleTransition,UC20,consensus,RoleManager (n=29),validateRoleTransition (n=29),validate if role transition is allowed (n=3); validate role change (n=2); validate role change is permitted (n=1); verify role change is allowed (n=1); validate if role change is allowed (n=1); Ensure authorized role changes (n=1); Validates if the proposed role transition is allowed. (n=1); Validate the role transition request (n=1); Check valid role transitions (n=1); Validate role change eligibility (n=1); Validates role transition eligibility (n=1),UC20:21,UC20:6
7,servicerequest,submitrequest,"('servicerequest', 'submitrequest')",ServiceRequest,submitRequest,UC06,consensus,ServiceRequest (n=17),submitRequest (n=17),Submit new service request (n=2); Submit service request (n=2); submit transport/collection request (n=1); create & submit request (status=PENDING) (n=1); create new service request (n=1); create service request (n=1); submit service request (n=1),UC06:13,UC06:5
7,useraccount,activateaccount,"('useraccount', 'activateaccount')",UserAccount,activateAccount,UC01,consensus,UserAccount (n=21),activateAccount (n=21),activate user account after email verification (n=2); Mark account as active after email verification (n=1); mark email as verified and activate account (n=1); activate account after verified email (n=1); activate account (n=1); activate the account after email verification (n=1); Change account status to ACTIVE after successful verification (n=1); Activate the user account (sets status to ACTIVE) (n=1); activate account after email verification (n=1); Activate account upon email verification (n=1),UC01:16; UC18:1,UC01:7; UC18:1
7,useraccount,createaccount,"('useraccount', 'createaccount')",UserAccount,createAccount,UC01,consensus,UserAccount (n=21),createAccount (n=21),Create user account with unverified status (n=3); create new user account (n=3); create user account with unverified email (n=1); create new account with UNVERIFIED email (n=1); create a new user account (n=1); Create validated user account (n=1); Create account with unverified status (n=1); Creates a new user account with ACTIVE status. (n=1); create user account (n=1); Create user account with unverified email (n=1),UC01:16,UC01:7
7,usercredentials,validatepasswordstrength,"('usercredentials', 'validatepasswordstrength')",UserCredentials,validatePasswordStrength,UC01,consensus,UserCredentials (n=30),validatePasswordStrength (n=30),validate password strength (n=6); Validate password strength (n=2); Check password complexity rules (n=2); check password strength (n=1); enforce password policy (n=1); check password complexity (n=1); validate password meets strength requirements (n=1); Enforce password complexity rules (n=1); Validates the strength of the provided password. (n=1); Validate password complexity (n=1); Validates password strength (n=1),UC01:18,UC01:5
7,wastejourney,updatestatus,"('wastejourney', 'updatestatus')",WasteJourney,updateStatus,UC10,consensus,WasteJourney (n=12),updateStatus (n=12),update journey status (n=1); Transition tracking status (n=1); Update journey tracking status (n=1),UC10:9,UC10:5
6,collectionpoint,updatedetails,"('collectionpoint', 'updatedetails')",CollectionPoint,updateDetails,UC19,consensus,CollectionPoint (n=23),updateDetails (n=23),"update collection point details (n=2); Update collection point name/type/hours (n=1); update point (n=1); update point details (n=1); edit location info (n=1); edit point details (n=1); Update the core details of the collection point (n=1); Validate and update collection point details (n=1); Updates the core details of a collection point. (n=1); Update the details of a collection point. (n=1); Update collection point details. Validates input (e.g. using address.verifyAddress(), validateOperatingHours(newOperatingHours)). (n=1); Update the name and type of the collection point. (n=1); Updates point details (n=1)",UC19:19,UC19:6
6,notificationservice,sendnotification,"('notificationservice', 'sendnotification')",NotificationService,sendNotification,UC01,fallback,NotificationService (n=28),sendNotification (n=28),send notification to user (n=3); send registration/verification email (n=1),UC01:4,UC01:2
6,product,createlisting,"('product', 'createlisting')",Product,createListing,UC05,fallback,Product (n=25),createListing (n=25),"create new product listing (n=6); create product listing (n=4); Create new product listing (n=2); List new recyclable product (n=1); Create a new product listing with initial status (e.g., PUBLISHED or PENDING_APPROVAL) (n=1); Creates a new product listing with PENDING_APPROVAL status. (n=1); Creates new product listing (n=1)",UC05:20,UC05:4
6,serviceprovider,updateprofile,"('serviceprovider', 'updateprofile')",ServiceProvider,updateProfile,UC18,consensus,ServiceProvider (n=26),updateProfile (n=26),update service provider profile (n=3); update provider profile (n=2); update provider profile data (n=1),UC18:21,UC18:5
6,servicerequest,schedule,"('servicerequest', 'schedule')",ServiceRequest,schedule,UC06,fallback,ServiceRequest (n=23),schedule (n=23),schedule request (n=3); set scheduled time & status (n=1); schedule service request (n=1); Update scheduledTime and status (n=1),UC06:6; UC08:3,UC06:2; UC08:3
6,servicerequest,updatestatus,"('servicerequest', 'updatestatus')",ServiceRequest,updateStatus,UC03,fallback,ServiceRequest (n=13),updateStatus (n=13),Validate and apply status transition (n=1); Updates request status (n=1),UC03:1; UC08:1,UC03:1; UC08:1
6,transportrequest,scheduletransport,"('transportrequest', 'scheduletransport')",TransportRequest,scheduleTransport,UC09,consensus,TransportRequest (n=23),scheduleTransport (n=23),set transport schedule and route (n=1); Schedule transport date and route (n=1); Assigns transport route plan (n=1); Schedule transport request (n=1),UC09:15; UC06:5,UC06:2; UC09:5
6,useraccount,logout,"('useraccount', 'logout')",UserAccount,logout,UC16,consensus,UserAccount (n=15),logout (n=15),terminate user session (n=1); terminate current session (n=1); end user session (n=1),UC16:13,UC16:5
6,useraccount,unlockaccount,"('useraccount', 'unlockaccount')",UserAccount,unlockAccount,UC02,fallback,UserAccount (n=16),unlockAccount (n=16),unlock a previously locked account (n=1); unlock previously locked account (n=1); unlock account (n=1); unlock a locked account (n=1),UC02:13,UC02:4
6,usercredentials,validatepassword,"('usercredentials', 'validatepassword')",UserCredentials,validatePassword,UC02,fallback,UserCredentials (n=11),validatePassword (n=11),Validate password strength (n=1); Check password requirements (n=1); Validate provided password (n=1); Check if provided password matches stored hash. (n=1),UC02:8; UC01:2,UC01:2; UC02:3
6,wastejourney,addstage,"('wastejourney', 'addstage')",WasteJourney,addStage,UC10,consensus,WasteJourney (n=25),addStage (n=25),add stage to journey (n=3); add stage to waste journey (n=2); add stage (n=1); add new stage to journey (n=1); update waste journey progress (n=1); record new journey stage (n=1); Record journey progress (n=1); Record processing stage (n=1); Record new processing stage (n=1); Records new stage in waste journey (n=1); Add new tracking stage (n=1),UC10:18; UC08:1; UC04:1,UC04:1; UC08:1; UC10:5
6,wastejourney,updatestage,"('wastejourney', 'updatestage')",WasteJourney,updateStage,UC10,fallback,WasteJourney (n=10),updateStage (n=10),Update current stage of waste journey (n=1); add stage & update location (n=1); Add stage and update status (n=1),UC10:3; UC08:1,UC08:1; UC10:3
5,collectionpoint,updateoperatinghours,"('collectionpoint', 'updateoperatinghours')",CollectionPoint,updateOperatingHours,UC19,consensus,CollectionPoint (n=11),updateOperatingHours (n=11),update operating hours (n=2); update operating hours for specific day (n=1); Modify available service times (n=1); Modify facility schedule (n=1); Modify the operating hours for the collection point (n=1); Update the operating hours for the collection point. (n=1); Update facility operating hours (n=1),UC19:8,UC19:5
5,collectionpoint,validateoperatinghours,"('collectionpoint', 'validateoperatinghours')",CollectionPoint,validateOperatingHours,UC19,fallback,CollectionPoint (n=13),validateOperatingHours (n=13),"validate operating hours consistency (n=1); verify operating hours consistency (n=1); validate operating hours for consistency (n=1); Ensure valid time ranges per day (n=1); Check time range validity (n=1); Validate operating hours consistency (e.g., no overlaps, valid TimeRanges). (n=1); Validates operating hours format (n=1); Validate operating hours consistency (n=1)",UC19:10,UC19:4
5,collectionrequest,schedulecollection,"('collectionrequest', 'schedulecollection')",CollectionRequest,scheduleCollection,UC08,fallback,CollectionRequest (n=17),scheduleCollection (n=17),Schedule collection time slot (n=1),UC08:11; UC06:4,UC06:1; UC08:4
5,notificationservice,notifyrequestaccepted,"('notificationservice', 'notifyrequestaccepted')",NotificationService,notifyRequestAccepted,UC08,fallback,NotificationService (n=14),notifyRequestAccepted (n=14),Notify user of request acceptance (n=1); notify collection accepted (n=1); notify user about accepted request (n=1); notify user of accepted request (n=1); Notify request acceptance (n=1),UC08:5,UC08:4
5,notificationservice,sendpasswordresetemail,"('notificationservice', 'sendpasswordresetemail')",NotificationService,sendPasswordResetEmail,UC03,consensus,NotificationService (n=18),sendPasswordResetEmail (n=18),send password reset email (n=6); send password reset link (n=2); Send password reset email (n=1); Send password reset email with token (n=1); Sends password reset instructions (n=1),UC03:12,UC03:5
5,notificationservice,sendregistrationconfirmation,"('notificationservice', 'sendregistrationconfirmation')",NotificationService,sendRegistrationConfirmation,UC01,consensus,NotificationService (n=12),sendRegistrationConfirmation (n=12),send registration confirmation (n=3); send registration success (n=1); Send confirmation email upon successful registration and verification (n=1),UC01:7,UC01:5
5,product,updatedetails,"('product', 'updatedetails')",Product,updateDetails,UC13,consensus,Product (n=14),updateDetails (n=14),"update listing (n=1); update product listing (n=1); Validate and modify product fields (n=1); Modify product information (n=1); Validate and update product details, record timestamp (n=1); Updates the product's details and last updated date. (n=1); Update details of an existing product listing. (n=1); Update core product details and record update timestamp. (n=1); update product details (n=1); Update product listing details (n=1); Updates listing details (n=1)",UC13:11,UC13:5
5,serviceprovider,acceptrequest,"('serviceprovider', 'acceptrequest')",ServiceProvider,acceptRequest,UC08,fallback,ServiceProvider (n=8),acceptRequest (n=8),accept and schedule service request (n=1); Accepts collection request (n=1),UC08:3,UC08:2
5,serviceprovider,checkavailability,"('serviceprovider', 'checkavailability')",ServiceProvider,checkAvailability,UC08,fallback,ServiceProvider (n=11),checkAvailability (n=11),verify capacity/vehicle (n=1); verify capacity for given slot (n=1); Verify provider capacity for request (n=1); Verify provider capacity (n=1); Check availability/capacity for the requested date/time for a collection request (n=1); Checks capacity for requested timeslot (n=1),UC08:6; UC02:1,UC02:1; UC08:4
5,servicerequest,assignprovider,"('servicerequest', 'assignprovider')",ServiceRequest,assignProvider,UC06,fallback,ServiceRequest (n=10),assignProvider (n=10),assign provider to request (n=1); assign provider (n=1); set handling provider (n=1),UC06:2; UC07:1,UC06:1; UC07:1
5,servicerequest,createrequest,"('servicerequest', 'createrequest')",ServiceRequest,createRequest,UC06,fallback,ServiceRequest (n=13),createRequest (n=13),create service request (n=4); create new service request (n=1); Create new service request (n=1); Creates new service request (n=1),UC06:7,UC06:3
5,useraccount,login,"('useraccount', 'login')",UserAccount,login,UC02,fallback,UserAccount (n=18),login (n=18),authenticate user (n=1),UC02:16,UC02:3
5,userprofile,updateprofiledetails,"('userprofile', 'updateprofiledetails')",UserProfile,updateProfileDetails,UC04,consensus,UserProfile (n=18),updateProfileDetails (n=18),"Validate and update profile fields (n=1); Update user's name and phone number (n=1); Update profile information (name, phone, address). Validates input. Sets lastUpdatedDate. (n=1); Update user's profile information (n=1); Update profile information (n=1); Apply profile updates (n=1)",UC04:9,UC04:5
5,userprofile,validateemailformat,"('userprofile', 'validateemailformat')",UserProfile,validateEmailFormat,UC01,fallback,UserProfile (n=18),validateEmailFormat (n=18),validate email format (n=3); Check email syntax validity (n=2); validate email syntax (n=1); Check email format validity (n=1); Validates the format of the provided email. (n=1); Validate email format (n=1); Validate email format during registration (n=1); Validates email format during registration (n=1),UC01:11,UC01:4
5,userprofile,validateprofiledata,"('userprofile', 'validateprofiledata')",UserProfile,validateProfileData,UC04,fallback,UserProfile (n=11),validateProfileData (n=11),validate profile information (n=2); validate profile data (n=1); validate profile update (n=1); validate user information (n=1); Validates the integrity and format of profile data. (n=1); Validates profile update data (n=1),UC04:4; UC01:3,UC01:1; UC04:3
5,wastejourney,getcurrentstatus,"('wastejourney', 'getcurrentstatus')",WasteJourney,getCurrentStatus,UC10,fallback,WasteJourney (n=14),getCurrentStatus (n=14),retrieve journey status (n=2); get status (n=1); get current journey status (n=1); retrieve current journey status (n=1); return journey status (n=1); Return status and location (n=1); Get the current tracking status (n=1),UC10:9,UC10:4
5,wastejourney,updatelocation,"('wastejourney', 'updatelocation')",WasteJourney,updateLocation,UC10,consensus,WasteJourney (n=19),updateLocation (n=19),update current waste location (n=2); update waste current location (n=2); Update current waste location (n=2); Track geographical position (n=1); Record current transport position (n=1); Track waste movement progress (n=1); Update the current location of the waste during transit (n=1); Update the current tracked location of the waste. (n=1); Update current location (n=1); Updates current waste location (n=1),UC10:13; UC09:1,UC09:1; UC10:5
